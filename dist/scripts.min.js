"use strict";

function getUIPref() {
    return new Promise(function (resolve, reject) {
        chrome.storage.sync.get({ "enableFlatUI": '' }, function (pref) {
            if (!chrome.runtime.error) {
                resolve(pref);
            } else {
                console.log("Runtime error.");
                reject(Error("Pref could not be loaded."));
            }
        });
    });
}

function updateUIPref(UIPref) {
    chrome.storage.sync.set({ "enableFlatUI": UIPref }, function () {
        chrome.runtime.error && console.log("Runtime error.");
    });
}

function toggleUI() {
    if (document.querySelector('body').classList.contains('flatUI')) {
        document.querySelector('body').classList.remove('flatUI');
        updateUIPref(false);
    } else {
        document.querySelector('body').classList.add('flatUI');
        updateUIPref(true);
    }
    return false;
}

chrome.runtime.sendMessage({}, function () {
    var readyStateCheckInterval = setInterval(function () {
        if (document.readyState === "complete") {
            clearInterval(readyStateCheckInterval);

            var bodyContainer = document.getElementsByTagName('body')[0],
                toggleButton = document.createElement('span'),
                buttonText = document.createElement('span');

            toggleButton.setAttribute('id', 'toggleButton');
            toggleButton.setAttribute('class', 'toggleButton');

            buttonText.setAttribute('class', 'toggleText');
            buttonText.innerHTML = 'IRC';

            bodyContainer.appendChild(toggleButton);
            toggleButton.appendChild(buttonText);

            getUIPref().then(function (pref) {
                if (pref.enableFlatUI) {
                    document.querySelector('body').classList.add('flatUI');
                } else {
                    document.querySelector('body').classList.remove('flatUI');
                }
                document.getElementById('toggleButton').onclick = toggleUI;
            });
        }
    }, 10);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxTQUFTLFNBQVQsR0FBcUI7QUFDakIsV0FBTyxJQUFJLE9BQUosQ0FBYSxVQUFDLE9BQUQsRUFBVSxNQUFWLEVBQXFCO0FBQ3JDLGVBQU8sT0FBUCxDQUFlLElBQWYsQ0FBb0IsR0FBcEIsQ0FBd0IsRUFBQyxnQkFBZ0IsRUFBakIsRUFBeEIsRUFBOEMsZ0JBQVE7QUFDbEQsZ0JBQUcsQ0FBQyxPQUFPLE9BQVAsQ0FBZSxLQUFuQixFQUEwQjtBQUN0Qix3QkFBUSxJQUFSO0FBQ0gsYUFGRCxNQUVPO0FBQ0gsd0JBQVEsR0FBUixDQUFZLGdCQUFaO0FBQ0EsdUJBQU8sTUFBTSwyQkFBTixDQUFQO0FBQ0g7QUFDSixTQVBEO0FBUUgsS0FUTSxDQUFQO0FBVUg7O0FBRUQsU0FBUyxZQUFULENBQXNCLE1BQXRCLEVBQThCO0FBQzFCLFdBQU8sT0FBUCxDQUFlLElBQWYsQ0FBb0IsR0FBcEIsQ0FBd0IsRUFBQyxnQkFBZ0IsTUFBakIsRUFBeEIsRUFBa0QsWUFBTTtBQUNwRCxlQUFPLE9BQVAsQ0FBZSxLQUFmLElBQXdCLFFBQVEsR0FBUixDQUFZLGdCQUFaLENBQXhCO0FBQ0gsS0FGRDtBQUdIOztBQUVELFNBQVMsUUFBVCxHQUFvQjtBQUNoQixRQUFJLFNBQVMsYUFBVCxDQUF1QixNQUF2QixFQUErQixTQUEvQixDQUF5QyxRQUF6QyxDQUFrRCxRQUFsRCxDQUFKLEVBQWlFO0FBQzdELGlCQUFTLGFBQVQsQ0FBdUIsTUFBdkIsRUFBK0IsU0FBL0IsQ0FBeUMsTUFBekMsQ0FBZ0QsUUFBaEQ7QUFDQSxxQkFBYSxLQUFiO0FBQ0gsS0FIRCxNQUdPO0FBQ0gsaUJBQVMsYUFBVCxDQUF1QixNQUF2QixFQUErQixTQUEvQixDQUF5QyxHQUF6QyxDQUE2QyxRQUE3QztBQUNBLHFCQUFhLElBQWI7QUFDSDtBQUNELFdBQU8sS0FBUDtBQUNIOztBQUVELE9BQU8sT0FBUCxDQUFlLFdBQWYsQ0FBMkIsRUFBM0IsRUFBK0IsWUFBTTtBQUNqQyxRQUFJLDBCQUEwQixZQUFhLFlBQU07QUFDN0MsWUFBSSxTQUFTLFVBQVQsS0FBd0IsVUFBNUIsRUFBd0M7QUFDcEMsMEJBQWMsdUJBQWQ7O0FBRUEsZ0JBQU0sZ0JBQWdCLFNBQVMsb0JBQVQsQ0FBOEIsTUFBOUIsRUFBc0MsQ0FBdEMsQ0FBdEI7QUFBQSxnQkFDTSxlQUFlLFNBQVMsYUFBVCxDQUF1QixNQUF2QixDQURyQjtBQUFBLGdCQUVNLGFBQWEsU0FBUyxhQUFULENBQXVCLE1BQXZCLENBRm5COztBQUlBLHlCQUFhLFlBQWIsQ0FBMEIsSUFBMUIsRUFBZ0MsY0FBaEM7QUFDQSx5QkFBYSxZQUFiLENBQTBCLE9BQTFCLEVBQWtDLGNBQWxDOztBQUVBLHVCQUFXLFlBQVgsQ0FBd0IsT0FBeEIsRUFBZ0MsWUFBaEM7QUFDQSx1QkFBVyxTQUFYLEdBQXVCLEtBQXZCOztBQUVBLDBCQUFjLFdBQWQsQ0FBMEIsWUFBMUI7QUFDQSx5QkFBYSxXQUFiLENBQXlCLFVBQXpCOztBQUVBLHdCQUFZLElBQVosQ0FBa0IsZ0JBQVE7QUFDdEIsb0JBQUcsS0FBSyxZQUFSLEVBQXNCO0FBQ2xCLDZCQUFTLGFBQVQsQ0FBdUIsTUFBdkIsRUFBK0IsU0FBL0IsQ0FBeUMsR0FBekMsQ0FBNkMsUUFBN0M7QUFDSCxpQkFGRCxNQUVPO0FBQ0gsNkJBQVMsYUFBVCxDQUF1QixNQUF2QixFQUErQixTQUEvQixDQUF5QyxNQUF6QyxDQUFnRCxRQUFoRDtBQUNIO0FBQ0QseUJBQVMsY0FBVCxDQUF3QixjQUF4QixFQUF3QyxPQUF4QyxHQUFrRCxRQUFsRDtBQUNILGFBUEQ7QUFRSDtBQUNKLEtBMUI2QixFQTBCM0IsRUExQjJCLENBQTlCO0FBMkJILENBNUJEIiwiZmlsZSI6InNjcmlwdHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZ2V0VUlQcmVmKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSggKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBjaHJvbWUuc3RvcmFnZS5zeW5jLmdldCh7XCJlbmFibGVGbGF0VUlcIjogJyd9LCBwcmVmID0+IHtcbiAgICAgICAgICAgIGlmKCFjaHJvbWUucnVudGltZS5lcnJvcikge1xuICAgICAgICAgICAgICAgIHJlc29sdmUocHJlZik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiUnVudGltZSBlcnJvci5cIik7XG4gICAgICAgICAgICAgICAgcmVqZWN0KEVycm9yKFwiUHJlZiBjb3VsZCBub3QgYmUgbG9hZGVkLlwiKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVVSVByZWYoVUlQcmVmKSB7XG4gICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5zZXQoe1wiZW5hYmxlRmxhdFVJXCI6IFVJUHJlZn0sICgpID0+IHtcbiAgICAgICAgY2hyb21lLnJ1bnRpbWUuZXJyb3IgJiYgY29uc29sZS5sb2coXCJSdW50aW1lIGVycm9yLlwiKTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gdG9nZ2xlVUkoKSB7XG4gICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKS5jbGFzc0xpc3QuY29udGFpbnMoJ2ZsYXRVSScpKSB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKS5jbGFzc0xpc3QucmVtb3ZlKCdmbGF0VUknKTtcbiAgICAgICAgdXBkYXRlVUlQcmVmKGZhbHNlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5JykuY2xhc3NMaXN0LmFkZCgnZmxhdFVJJyk7XG4gICAgICAgIHVwZGF0ZVVJUHJlZih0cnVlKTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5jaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7fSwgKCkgPT4ge1xuICAgIGxldCByZWFkeVN0YXRlQ2hlY2tJbnRlcnZhbCA9IHNldEludGVydmFsKCAoKSA9PiB7XG4gICAgICAgIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImNvbXBsZXRlXCIpIHtcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwocmVhZHlTdGF0ZUNoZWNrSW50ZXJ2YWwpO1xuXG4gICAgICAgICAgICBjb25zdCBib2R5Q29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXSxcbiAgICAgICAgICAgICAgICAgIHRvZ2dsZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKSxcbiAgICAgICAgICAgICAgICAgIGJ1dHRvblRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRvZ2dsZUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3RvZ2dsZUJ1dHRvbicpO1xuICAgICAgICAgICAgdG9nZ2xlQnV0dG9uLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCd0b2dnbGVCdXR0b24nKTtcblxuICAgICAgICAgICAgYnV0dG9uVGV4dC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywndG9nZ2xlVGV4dCcpO1xuICAgICAgICAgICAgYnV0dG9uVGV4dC5pbm5lckhUTUwgPSAnSVJDJztcblxuICAgICAgICAgICAgYm9keUNvbnRhaW5lci5hcHBlbmRDaGlsZCh0b2dnbGVCdXR0b24pO1xuICAgICAgICAgICAgdG9nZ2xlQnV0dG9uLmFwcGVuZENoaWxkKGJ1dHRvblRleHQpO1xuXG4gICAgICAgICAgICBnZXRVSVByZWYoKS50aGVuKCBwcmVmID0+IHtcbiAgICAgICAgICAgICAgICBpZihwcmVmLmVuYWJsZUZsYXRVSSkge1xuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5JykuY2xhc3NMaXN0LmFkZCgnZmxhdFVJJyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpLmNsYXNzTGlzdC5yZW1vdmUoJ2ZsYXRVSScpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9nZ2xlQnV0dG9uJykub25jbGljayA9IHRvZ2dsZVVJO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9LCAxMCk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
